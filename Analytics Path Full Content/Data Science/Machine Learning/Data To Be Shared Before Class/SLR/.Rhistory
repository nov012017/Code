}else if(age[i]>35 & age[i]<=45){
df$age[i]='36-45'
}else if(age[i]>45 & age[i]<=55){
df$age_grp[i]='46-55'
}else df$age[i]='55+'
}
}else if(df$age[i]>25 & df$age[i]<=35{
df
df<-data.frame(
id=c(1,2,3,4,5),
age=c(29,34,36,45,56),
gender=c('M','F','M','F','M')
)
df
df$id
for(i in 1:nrow(df)){
if(df$age[i]<=25){
df$age_grp[i]='0-25'
}else if(df$age[i]>25 & df$age[i]<=35{
df$age_grp='26-35'
}else if(age[i]>35 & age[i]<=45){
df$age[i]='36-45'
}else if(age[i]>45 & age[i]<=55){
df$age_grp[i]='46-55'
}else df$age[i]='55+'
}
df
for(i in 1:nrow(df)){
if(df$age[i]<=25){
df$age_grp[i]='0-25'
}else if(df$age[i]>25 & df$age[i]<=35{
df$age_grp='26-35'
}else if(df$age[i]>35 & age[i]<=45){
df$age[i]='36-45'
}else if(age[i]>45 & age[i]<=55){
df$age_grp[i]='46-55'
}else df$age[i]='55+'
}
df
for(i in 1:nrow(df)){
if(df$age[i]<=25){
df$age_grp[i]='0-25'
}else if(df$age[i]>25 & df$age[i]<=35{
df$age_grp='26-35'
}else if(df$age[i]>35 & age[i]<=45){
df$age[i]='36-45'
}else if(age[i]>45 & age[i]<=55){
df$age_grp[i]='46-55'
}else df$age[i]='55+'
}
df
for(i in 1:nrow(df)){
if(df$age[i]<=25){
df$age_grp[i]='0-25'
}else if(df$age[i]>25 & df$age[i]<=35{
df$age_grp='26-35'
}else if(df$age[i]>35 & age[i]<=45){
df$age_grp[i]='36-45'
}else if(age[i]>45 & age[i]<=55){
df$age_grp[i]='46-55'
}else df$age[i]='55+'
}
df
for(i in 1:nrow(df)){
if(df$age[i]<=25){
df$age_grp[i]='0-25'
}else if(df$age[i]>25 & df$age[i]<=35{
df$age_grp='26-35'
}else if(df$age[i]>35 & age[i]<=45){
df$age_grp[i]='36-45'
}else if(age[i]>45 & age[i]<=55){
df$age_grp[i]='46-55'
}else df$age_grp[i]='55+'
}
df
for(i in 1:nrow(df)){
if(df$age[i]<=25){
df$age_grp[i]='0-25'
}else if(df$age[i]>25 & df$age[i]<=35{
df$age_grp='26-35'
}else if(df$age[i]>35 & df$age[i]<=45){
df$age_grp[i]='36-45'
}else if(df$age[i]>45 & df$age[i]<=55){
df$age_grp[i]='46-55'
}else df$age_grp[i]='55+'
}
df
for(i in 1:nrow(df)){
if(df$age[i]<=25){
df$age_grp[i]='0-25'
}else if(df$age[i]>25 & df$age[i]<=35{
df$age_grp='26-35'
}else if(df$age[i]>35 & df$age[i]<=45){
df$age_grp[i]='36-45'
}else if(df$age[i]>45 & df$age[i]<=55){
df$age_grp[i]='46-55'
}else df$age_grp[i]='55+'
}
df
}
data1 = read.csv("D:\\Data science  notes/titanic3.csv")
data1$total=sum(data1$international.plan,data1$voice.mail.plan)
View(data1$total)
View(data1$total)
View(data1)
View(data1$total)
data1 = read.csv("D:\\Data science  notes/Churn.csv")
data1 = read.csv("D:\\Data science  notes/Churn.csv")
data1 = read.csv("D:\\Data science  notes/Churn Data.csv")
df=data1[?order]
data = read.csv("D:\\Data science  notes/Churn Data.csv")
View(data)
data = read.csv("D:\\Data science  notes/Churn Data.csv")
View(data)
head(data)
df_ny=data[data$state=="NY",]
df_ny
df_ny_nj=data[data$state %in% c("NY","NJ"),]
df_ny_nj
sum(is.na(data))
is.na(data)
sum(is.na(data))
sort(data$age,decreasing = TRUE)
class(data)
?sort
str(data)
names(data)
churn = read.csv("D:\\Data science  notes/Churn Data.csv")
sum()
sd()
head(churn)
df_ny=data[data$state=="NY",]
data = read.csv("D:\\Data science  notes/Churn Data.csv")
aggregate(churn$international.plan,list(churn$churn),mean)
aggregate(churn$total.intl.calls,list(churn$churn),mean)
a=aggregate(churn$total.intl.calls,list(churn$churn),mean)
names(a)=c(churn_avg,avg)
aggregate(churn$churn,list(churn$total.intl.calls,churn$international.plan),mean)
aggregate(churn$churn,list(churn$state),mean)
a=aggregate(churn$total.intl.calls,list(churn$churn),mean)
names(a)=c("churn_avg","avg")
a
names(a)=c("churn_gr","avg")
a
apply(churn[,9:11],2,mean)
apply(churn[,9:13],2,mean)
apply(churn[,9:13],2,mean)
names(data)
apply(churn[,9:18],2,mean)
apply(churn[,9:12],1,sum)
?lapply
lapply(churn[,9:11],mean)
sapply(churn[,9:12],mean)
sapply(churn[,9:12],sum)
install.packages("RODBC")
detach("RODBC",unload = TRUE)
remove.packages("RODBC", lib="~/R/win-library/3.4")
install.packages("RODBC")
library("RODBC", lib.loc="~/R/win-library/3.4")
library(RODBC)
library(sqldf)
library(sqldf)
df_sq=sqldf(select * from churn where State='NY')
df_sq=sqldf("select * from churn where State='NY'")
df_sq
library(dplyr)
library(dplyr)
colnames(churn)
churn2=select(churn, "account.length","area.code")
churn2
churn3=churn[churn$state]
churn3=churn$state
churn3
colnames(churn)
filter(churn,area.code>10)
filter(churn,area.code>10)
distinct(churn)
ff<-distinct(churn)
head(ff)
ff<-distinct(churn$state)
ff<-distinct(churn,1:3)
ff<-distinct(churn,1:3)
ff<-distinct(churn)
head(ff)
colnames(churn)
ff<-distinct(churn,account.length)
head(ff)
unique(churn)
duplicated(account.length)
duplicated(churn)
duplicated(area.code)
age=10
if(age>18){
age_group='18+'
}else{
age_group='0-18'
}
age_group
age=32
if(age<=25){
age_grp='0-25'
}else if(age>25&age<=35){
age_grp='26-35'
}else if(age>35 & age<=45){
age_grp='35-45'
}else age_grp='45+'
if(age<=25){
age_grp='0-25'
}else if(age>25&age<=35){
age_grp='26-35'
}else if(age>35 & age<=45){
age_grp='35-45'
}else age_grp='45+'
age_grp
age=c(26,39,48,57)
library(ISLR)
install.packages("ISLR")
library(ISLR)
install.packages("RColorBrewer")
install.packages("rpart.plot")
install.packages("party")
library("caret", lib.loc="~/R/win-library/3.4")
detach("package:caret", unload=TRUE)
library("rpart", lib.loc="~/R/win-library/3.4")
library("C50", lib.loc="~/R/win-library/3.4")
detach("package:C50", unload=TRUE)
install.packages("ipred")
install.packages("mlbench")
library(caret)
library(randomForest)
str(diamonds)
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2", dependencies = FALSE)
install.packages("reshape2")
install.packages("reshape2")
str(diamonds)
str(diamonds)
str(diamonds)
library(ggplot2)
str(diamonds)
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_point()
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_smooth()
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_smooth()
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_point(alpha=0.4)
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_point(alpha=0.4)
p<-ggplot(data=diamonds,aes(carat,price)
p+geom_abline()
p+geom_abline()
q<-ggplot(data=diamonds,aes(carat,price)
q+geom_abline()
q<-ggplot(data=diamonds,aes(carat,price)
q+geom_abline()
q<-ggplot(data=diamonds,aes(carat,price))
q+geom_abline()
q+geom_abline()
q+geom_area()
q+geom_area()
q+geom_col()
q+geom_col()
q+geom_smooth()
q+geom_smooth()
q+geom_boxplot()
q+geom_boxplot()
View(diamonds)
str(diamonds)
ggplot(data=mtcars,aes(cyl,fill=am))+geom_bar(position = "stack")
ggplot(data=mtcars,aes(wt,mpg))+geom_text(aes(label=cyl))
ggplot(data=mtcars,aes(cyl,fill=am))+geom_bar(position = "stack")
ggplot(data=mtcars,aes(cyl,fill=am))+geom_bar(position = "stack")
ggplot(mtcars,aes(mpg))+
geom_histogram(bandwidth=3)
ggplot(mtcars,aes(mpg))+
geom_histogram(bandwidth=3)
ggplot(mtcars,aes(mpg))+
geom_histogram(bandwidth=3,fill=2)
ggplot(mtcars,aes(mpg))+
geom_histogram(bandwidth=3,color="blue")
ggplot(mtcars,aes(mpg))+
geom_histogram(bandwidth=3,color="blue",fill="red")
ggplot(mtcars,aes(mpg))+
geom_histogram(bandwidth=3,color="blue",fill="red")
str(economics)
head(economics)
ggplot(economics,aes(date,unemploy))+
geom_line()
ggplot(mtcars,aes(mpg))+
geom_histogram(bandwidth=3,color="blue",fill="red")
ggplot(economics,aes(date,unemploy))+
geom_line()
ggplot(economics,aes(date,unemploy))+
geom_line()
ggplot(economics,aes(date,unemploy/pop))+
geom_line()
ggplot(economics,aes(date,unemploy/pop))+
geom_line(colors(distinct = TRUE))
ggplot(economics,aes(date,unemploy/pop))+
geom_line(colors(distinct = TRUE))
ggplot(economics,aes(date,unemploy/pop,col(psavert)))+
geom_line()
ggplot(economics,aes(date,unemploy/pop,col(psavert)))+
geom_line()
ggplot(economics,aes(date,unemploy/pop,col(psavert)))+
geom_line()
ggplot(economics,aes(date,unemploy/pop,col=psavert))+
geom_line()
head(economics)
str(economics)
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
labs(title = "Fuel economy declines as weight increases")
p1
p1
p1 + theme(plot.title = element_text(size = rel(2)))
p1 + theme(plot.background = element_rect(fill = "green"))
p1 + theme(plot.background = element_rect(fill = "green"))
p1 + theme(panel.background = element_rect(fill = "white", colour = "grey50"))
p1 + theme(panel.background = element_rect(fill = "white", colour = "grey50"))
p1 + theme(panel.border = element_rect(linetype = "dashed", fill = NA))
p1 + theme(panel.border = element_rect(linetype = "dashed", fill = NA))
p1 + theme(panel.grid.major = element_line(colour = "black"))
p1 + theme(panel.grid.major = element_line(colour = "black"))
p1 + theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)
p1 + theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = "grey50"),
panel.ontop = TRUE
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = "grey50"),
panel.ontop = TRUE
p1 + theme(
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = "grey50"),
panel.ontop = TRUE
#####
tips
str(tips)
#install.packages("reshape2")
library(ggplot2)
str(diamonds)
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_point()
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_smooth()
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_point(alpha=0.4)
q<-ggplot(data=diamonds,aes(carat,price))
q+geom_abline()
q+geom_area()
q+geom_col()
q+geom_smooth()
q+geom_boxplot()
View(diamonds)
####
str(economics)
head(economics)
ggplot(economics,aes(date,unemploy))+geom_line()
ggplot(economics,aes(date,unemploy/pop))+geom_line()
ggplot(economics,aes(date,unemploy/pop,col=psavert))+geom_line()
p1 + theme(
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = "grey50"),
panel.ontop = TRUE
#####
tips
str(tips)
#install.packages("reshape2")
library(ggplot2)
str(diamonds)
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_point()
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_smooth()
ggplot(data=diamonds,aes(carat,price,col=clarity))+geom_point(alpha=0.4)
q<-ggplot(data=diamonds,aes(carat,price))
q+geom_abline()
q+geom_area()
q+geom_col()
q+geom_smooth()
q+geom_boxplot()
View(diamonds)
####
str(economics)
head(economics)
ggplot(economics,aes(date,unemploy))+geom_line()
ggplot(economics,aes(date,unemploy/pop))+geom_line()
ggplot(economics,aes(date,unemploy/pop,col=psavert))+geom_line()
p1 + theme(
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = "grey50"),
panel.ontop = TRUE
)
p2 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point(aes(colour = factor(cyl), shape = factor(vs))) +
labs(
x = "Weight (1000 lbs)",
y = "Fuel economy (mpg)",
colour = "Cylinders",
shape = "Transmission"
)
p2
p2
p2 + theme(legend.position = "none")
p2 + theme(legend.position = "none")
p2 + theme(legend.justification = "top")
p2 + theme(legend.justification = "top")
p2 + theme(legend.position = "bottom")
p2 + theme(legend.position = "bottom")
p2 + theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
p2 + theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
)
p2 + theme(legend.key = element_rect(fill = "white", colour = "black"))
p2 + theme(legend.key = element_rect(fill = "white", colour = "black"))
p2 + theme(legend.text = element_text(size = 8, colour = "red"))
p2 + theme(legend.text = element_text(size = 8, colour = "red"))
p2 + theme(legend.title = element_text(face = "bold"))
p2 + theme(legend.title = element_text(face = "bold"))
q()
library(MASS)
data("Boston")
View(Boston)
?Boston
set.seed(2)
library(caTools)
split<-sample.split(Boston$medv,SplitRatio = 0.7)
split
train_data<-subset(Boston,split==TRUE)
test_data<-subset(Boston,split==FALSE)
plot(Boston$crim,Boston$medv,cex=0.5,xlab = "crime rate",ylab = "price")
names(Boston)
model<-lm(medv~.,data = train_data)
vif(model)
model<-lm(medv~.,data = train_data)
summary(model)
plot(test_data$medv,type = "l",col="green")
lines(predic,type = "l",col="blue")
lines(predic,type = "l",col="blue")
predic<-predict(model,test_data)
predic
plot(test_data$medv,type = "l",col="green")
lines(predic,type = "l",col="blue")
lines(predic,type = "l",col="blue")
predic<-predict(model,sample_data)
model<-lm(medv~.,data = train_data)
summary(model)
model<-lm(medv~.-tax,data = train_data)
summary(model)
model<-lm(medv~.-age -indus,data = train_data)
summary(model)
predic<-predict(model,test_data)
predic
plot(test_data$medv,type = "l",col="green")
lines(predic,type = "l",col="blue")
predic<-predict(model,sample_data)
predic
names(Boston)
corrplot(cr,type = "lower")
library(corrplot)
corrplot(cr,type = "lower")
corrplot(cr,method = "number")
train_data<-subset(Boston,split==TRUE)
test_data<-subset(Boston,split==FALSE)
plot(Boston$crim,Boston$medv,cex=0.5,xlab = "crime rate",ylab = "price")
cr<-cor(Boston)
attach(Boston)
library(lattice)
splom(~Boston[c(1:6,14)], groups=NULL,data = Boston,axis.line.tck=0,axis.text.alpha=0)
splom(~Boston[c(7,14)], groups=NULL,data = Boston,axis.line.tck=0,axis.text.alpha=0)
plot(rm,medv)
setwd("D:\Data science  notes\Data To Be Shared Before Class\SLR")
setwd("D:\\Data science  notes\\Data To Be Shared Before Class\\SLR")
dataset=read.csv("salary_Data.csv")
dataset=read.csv("Salary Data.csv")
library(ggplot2)
View(dataset)
names(dataset)
ggplot(dataset,aes(YearsExperience,Salary)+geom_point(color="blue"))
ggplot(dataset,aes(YearsExperience,Salary)+geom_point(color="blue"))
ggplot(dataset,aes(YearsExperience,Salary))+geom_point(color="blue")
?lm
regressor=lm(formula =Salary~YearsExperience ,data = dataset)
ggplot(dataset,aes(YearsExperience,Salary))+geom_point(color="blue")+
geom_smooth(method = 'lm',color='red')
ggplot(dataset,aes(YearsExperience,Salary))+geom_point(color="blue")+
geom_smooth(method = 'lm',color='red')
ggplot(dataset,aes(YearsExperience,Salary))+geom_point(color="blue")+
geom_smooth(method = 'lm',color='red',se=FALSE)
ggplot(dataset,aes(YearsExperience,Salary))+geom_point(color="blue")+
geom_smooth(method = 'lm',color='red',se=FALSE)
y_pred=predict(regressor,newdata = dataset)
y_pred=predict(regressor,newdata = dataset)
y_pred
library("caTools", lib.loc="~/R/win-library/3.4")
library(caTools)
set.seed(123)
split=sample.split(dataset$Salary,SplitRatio = 2/3)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
summary(regressor)
dataset$predicted=y_pred
anova(regressor)
