setwd("D:/AP/Linear Regression/SLR")
# Simple Linear Regression
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
dataset = read.csv('Salary_Data.csv')
dataset = read.csv('Salary Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
summary(regressor)
anova(regressor)
setwd("D:/AP/Linear Regression/Practice - PSU")
dataset = read.csv('Height_weight.csv')
regressor = lm(wt ~ ., data = dataset)
summary(regressor)
anova(regressor)
setwd("D:/AP/Linear Regression/SLR/p-value & CI")
dataset = read.csv('leadcord.csv')
regressor = lm(cord ~ ., data = dataset)
regressor = lm(Cord ~ ., data = dataset)
summary(regressor)
anova(regressor)
library(ggplot2)
regressor = lm(Cord ~ Sold, data = dataset)
summary(regressor)
anova(regressor)
plot(fitted(regressor), resid(regressor))
names(dataset)
plot(dataset$Sold, resid(model))
plot(dataset$Sold, resid(regressor))
setwd("D:/AP/Linear Regression/SLR/Residuals vs Predictor Plot")
dataset = read.csv('bloodpress.csv')
View(dataset)
regressor = lm(BP ~ Age, data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = Age, y = BP), data = dataset, color = 'blue') +
geom_smooth(metohd = 'lm')
ggplot() +
geom_point(aes(x = Age, y = BP), data = dataset, color = 'blue') +
geom_smooth(method = 'lm')
ggplot() +
geom_point(aes(x = Age, y = BP), data = dataset, color = 'blue') +
stat_smooth(method = 'lm', color = 'red')
ggplot() +
geom_point(aes(x = Age, y = BP), data = dataset, color = 'blue') +
geom_smooth(method = 'lm', se = FALSE)
ggplot(data = dataset, aes(x = Age, y = BP)) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', se = FALSE)
ggplot(data = dataset, aes(x = Age, y = BP)) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', se = FALSE, color = 'red')
ggplot(data = dataset, aes(x = Age, y = BP)) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', color = 'red')
ggplot(data = dataset, aes(x = Age, y = BP)) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', se = FALSE, color = 'red')
summary(regressor)
regressor = lm(BP ~ Weight, data = dataset)
ggplot(data = dataset, aes(x = Weight, y = BP)) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', se = FALSE, color = 'red')
summary(regressor)
regressor = lm(BP ~ Dur, data = dataset)
ggplot(data = dataset, aes(x = Dur, y = BP)) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', se = FALSE, color = 'red')
summary(regressor)
plot(dataset$Weight, resid(regressor))
plot(dataset$Age, resid(regressor))
setwd("D:/AP/Linear Regression/SLR/Problems in residual plots")
dataset = read.csv('treadwear.csv')
View(dataset)
regressor = lm(mileage ~ groove, data = dataset)
ggplot(aes(x = groove, y = mileage), data = dataset) +
ggpoint(color = 'blue') +
geom_smooth(method = 'lm', se = FALSE, color = 'red')
ggplot(aes(x = groove, y = mileage), data = dataset) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', se = FALSE, color = 'red')
y_pred = predict(regressor, newdata = dataset)
plot(y_pred, resid(regressor))
plot(y_pred, resid(regressor))
setwd("D:/AP/Linear Regression/SLR/Problems in residual plots")
dataset = read.csv('alphapluto.csv')
View(dataset)
regressor = lm(alpha ~ pluto, data = dataset)
library(ggplot2)
ggplot(aes(x = pluto, y = alpha), data = dataset) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', color = 'red', se = FALSE)
y_pred = predict(regressor, newdata = dataset)
plot(y_pred, resid(regressor))
dataset = readtxt('alcoholtobacco.txt')
install.packages('readtxt')
library(readtxt)
dataset = readtxt('alcoholtobacco.txt')
install.packages('readtext')
install.packages('readtext')
library(readtext)
dataset = read.csv('alcoholtobacco.csv')
regressor = lm(Alcohol ~ Tobacco, data = dataset)
library(ggplot2)
ggplot(aes(x = Tobacco, y = Alcohol), data = dataset) +
geom_point(color = 'blue') +
geom_smooth(method = 'lm', color = 'red', se = FALSE)
y_pred = predict(regressor, newdata = dataset)
plot(y_pred, resid(regressor))
plot(regressor)
library(MASS)
sresid = studres(regressor)
plot(y_pred, sresid)
