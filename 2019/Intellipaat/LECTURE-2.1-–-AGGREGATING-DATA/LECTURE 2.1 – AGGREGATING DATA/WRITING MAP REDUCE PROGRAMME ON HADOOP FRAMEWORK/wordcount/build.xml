<?xml version="1.0" encoding="UTF-8"?>
<project name="AppEngine" default="archive" basedir=".">

	<description>
          Hadoop Example
	</description>

	<property file="build.properties" />
	
	<!-- ==================== Clean Target ==================================== -->
	<!--
      The "clean" target deletes any previous "build" and "dist" directory,
      so that you can be ensured the application can be built from scratch.
    -->
	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${dist.home}" />
		<delete dir="${build.home}" />
	</target>

	<!-- ==================== Init Target ================================== -->
	<!--
      The "init" target is used to create the "build" destination directory,
      Normally, this task is executed indirectly when needed.
    -->
	<target name="init" description="Create build directory">
		<mkdir dir="${build.home}" />
	</target>

	<!-- ==================== Compile Target ================================== -->
	<!--
      The "compile" target transforms source files (from your "src" directory)
      into class files in the appropriate location in the build directory.
      This example assumes that you will be including your classes in an
      unpacked directory hierarchy under "/WEB-INF/classes".
    -->
	<target name="compile" depends="init" description="Compile Java sources">
		<javac srcdir="${source.home}" destdir="${build.home}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}" source="1.6" target="1.6">
			<classpath>
				<path>
					<fileset dir="${hadoop.lib}" />
				</path>
			</classpath>
		</javac>
	</target>

	<!-- ==================== Archive Target ================================== -->
	<!--
      The "archive" target create a binary archive of all files in build.home
    -->
	<target name="archive" depends="compile" description="Create binary archive of all files in dist.home">
		<jar jarfile="${app.name}.jar" basedir="${build.home}" manifest="${manifest.home}/MANIFEST.MF" />
	</target>
</project>
